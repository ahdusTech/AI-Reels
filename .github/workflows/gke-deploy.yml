name: Build and Deploy to Google Kubernetes Engine

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering from the GitHub UI

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # Google Cloud Project ID
  GKE_CLUSTER: minimal-gke-cluster           # GKE Cluster Name
  GKE_ZONE: us-central1-a                    # GKE Cluster Zone
  IMAGE: my-app                              # Name of the Docker image

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

    - name: Set up Google Cloud SDK
      run: |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gcloud config set project ${{ env.PROJECT_ID }}
        gcloud config set compute/zone ${{ env.GKE_ZONE }}
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }}

    - name: Build Docker image
      run: |
        docker build -f developer_starting_code/Dockerfile -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }} developer_starting_code

    - name: Push Docker image to Google Container Registry
      run: |
        echo "Pushing Docker image..."
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}

    - name: Deploy to Google Kubernetes Engine
      run: |
        kubectl set image deployment/my-app-deployment my-app=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }} --record

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/my-app-deployment

